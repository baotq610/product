{"version":3,"sources":["components/Menu/Menu.js","pages/HomePage/HomePage.js","components/Products/Products.js","components/Products/Product.js","constants/Config.js","utils/callApi.js","actions/index.js","constants/ActionTypes.js","pages/ProductPage/ProductPage.js","pages/ProductActionPage/ProductAddPage.js","pages/ProductActionPage/ProductEditPage.js","routes.js","App.js","serviceWorker.js","reducers/product.js","reducers/index.js","index.js"],"names":["menus","to","exact","label","MenuLink","_ref","activeOnlyWhenExact","react_default","a","createElement","react_router","path","children","_ref2","active","match","className","concat","react_router_dom","Menu","showMenus","result","length","map","menu","index","Menu_MenuLink","key","role","this","Component","HomePage","Products","props","Product","onDeleteProduct","product","_this","id","_this$props","status","statusClass","name","price","type","onClick","URL_API","callApi","endpoint","method","arguments","undefined","body","axios","url","Config","data","catch","err","console","log","actFetchProducts","products","actAddProduct","actDeleteProduct","actGetProductBaseOnIdToEdit","actUpdateProduct","ProductPage","showProducts","Products_Product","onFetchProducts","components_Products_Products","connect","state","dispatch","then","res","Actions","ProductAddPage","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChange","e","target","value","checked","setState","defineProperty","onSave","history","txtName","txtPrice","cbStatus","preventDefault","onAddProduct","goBack","_this$state","onSubmit","for","placeholder","ProductEditPage","params","onUpdateProduct","onGetProductBaseOnIdToEdit","nextProps","productEditing","_this$state2","routes","main","pages_HomePage_HomePage","pages_ProductPage_ProductPage","ProductActionPage_ProductAddPage","ProductActionPage_ProductEditPage","App","showContents","route","component","components_Menu_Menu","Boolean","window","location","hostname","initialState","findIndex","forEach","myReducer","action","toConsumableArray","push","splice","combineReducers","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.025fcf10.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\n\r\n\r\nconst menus = [\r\n    {\r\n        to: \"/\",\r\n        exact: true,\r\n        label: \"Home\"\r\n    },\r\n    {\r\n        to: \"/product-list\",\r\n        exact: false,\r\n        label: \"Products\"\r\n    }\r\n]\r\n\r\nconst MenuLink = ({ label, to, activeOnlyWhenExact }) => {\r\n    return (\r\n        <Route\r\n            path={to}\r\n            exact={activeOnlyWhenExact}\r\n            children={({ match }) => {\r\n                let active = match ? \"active\" : '';\r\n                return (\r\n                    <li className={`${active}`}>\r\n                        <Link to={to}>{label}</Link>\r\n                    </li>\r\n                )\r\n            }}\r\n        />\r\n    );\r\n}\r\n\r\nclass Menu extends Component {\r\n\r\n    showMenus = (menus) => {\r\n        let result = null;\r\n        if (menus.length > 0) {\r\n            result = menus.map((menu,index)=>{\r\n                return (\r\n                    <MenuLink key={index} label={menu.label} to={menu.to} activeOnlyWhenExact={menu.exact}  />\r\n                )\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-default navbar-default\" role=\"navigation\">\r\n                <Link className=\"navbar-brand\" to=\"/\">CALL API</Link>\r\n                <ul className=\"nav navbar-nav\">\r\n                    {this.showMenus(menus)}\r\n                </ul>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\n\r\nclass HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <h1>Home Page !!!</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Products extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Link to=\"/product/add\" className=\"btn btn-success mb-10\">Add product</Link>\r\n                <div className=\"panel panel-default\">\r\n                    <div className=\"panel-heading\">\r\n                        <h3 className=\"panel-title\">Products</h3>\r\n                    </div>\r\n                    <div className=\"panel-body\">\r\n\r\n                        <table className=\"table table-bordered table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>STT</th>\r\n                                    <th>Code</th>\r\n                                    <th>Name</th>\r\n                                    <th>Price</th>\r\n                                    <th>Status</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.children}\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass Product extends Component {\r\n\r\n    onDeleteProduct = () => {\r\n        let { product } = this.props;\r\n        this.props.onDeleteProduct(product.id)\r\n    }    \r\n\r\n    render() {\r\n        let { product, index } = this.props;        \r\n        let status = product.status ? 'Active' : 'DeActive';\r\n        let statusClass = product.status ? 'success' : 'info';\r\n        return (\r\n            <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{product.id}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>\r\n                    <span className={`label label-${statusClass}`}>{status}</span>\r\n                </td>\r\n                <td>\r\n                    <Link to={`/product/edit/${product.id}`} type=\"button\" className=\"btn btn-warning mr-10\">Edit</Link>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={this.onDeleteProduct}>Delete</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;","export const URL_API = 'https://5ca3823c8bae720014a96298.mockapi.io/api'","import axios from 'axios';\r\nimport * as Config from './../constants/Config';\r\n\r\nexport default function callApi (endpoint, method='GET', body){\r\n    return axios({\r\n        method: method,\r\n        url: `${Config.URL_API}/${endpoint}`,\r\n        data: body\r\n      }).catch(err=>{\r\n        console.log(err)\r\n      });\r\n}","import * as Types from './../constants/ActionTypes';\r\nimport callApi from '../utils/callApi';\r\n\r\n// Fetch products from API and get data into store\r\nexport const actFetchProductsRequest = () => {\r\n    return (dispatch) => {\r\n        return callApi('product', 'GET', null).then(res => {            \r\n            dispatch(actFetchProducts(res.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const actFetchProducts = (products) => {\r\n    return {\r\n        type: Types.FETCH_PRODUCTS,\r\n        products\r\n    }\r\n}\r\n/////////////////////////////////////////////////////////////////////////////////\r\n\r\n// Add product to API and get data into store\r\nexport const actAddProductsRequest = (product) => {\r\n    return (dispatch) => {\r\n        return callApi('product', 'POST', product).then(res => {            \r\n            dispatch(actAddProduct(res.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const actAddProduct = (product) => {\r\n    return {\r\n        type: Types.ADD_PRODUCT,  \r\n        product    \r\n    }\r\n}\r\n\r\n///////////////////////////////////////////\r\n\r\n// Delete product to API and get data into store\r\nexport const actDeleteProductsRequest = (id) => {\r\n    return (dispatch) => {\r\n        return callApi(`product/${id}`, 'DELETE', null).then(res => {            \r\n            dispatch(actDeleteProduct(id))            \r\n        })\r\n    }\r\n}\r\n\r\nexport const actDeleteProduct = (id) => {\r\n    return {\r\n        type: Types.DELETE_PRODUCT,  \r\n        id    \r\n    }\r\n}\r\n\r\n///////////////////////////////////////////\r\n\r\n// Get ID product\r\nexport const actGetProductBaseOnIdToEditRequest = (id) => {\r\n    return (dispatch) => {\r\n        return callApi(`product/${id}`, 'GET', null).then(res => {            \r\n            dispatch(actGetProductBaseOnIdToEdit(res.data))                        \r\n        })\r\n    }\r\n}\r\n\r\nexport const actGetProductBaseOnIdToEdit = (product) => {\r\n    return {\r\n        type: Types.GET_PRODUCT_BASE_ON_ID_TO_EDIT,  \r\n        product\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////\r\n\r\n// Get ID product\r\nexport const actUpdateProductRequest = (id, product) => {\r\n    return (dispatch) => {\r\n        return callApi(`product/${id}`, 'PUT', product).then(res => {            \r\n            dispatch(actUpdateProduct(res.data))                        \r\n        })\r\n    }\r\n}\r\n\r\nexport const actUpdateProduct = (product) => {\r\n    return {\r\n        type: Types.UPDATE_PRODUCT,  \r\n        product\r\n    }\r\n}","export const FETCH_PRODUCTS = 'FETCH_PRODUCTS'\r\nexport const ADD_PRODUCT = 'ADD_PRODUCT'\r\nexport const UPDATE_PRODUCT = 'UPDATE_PRODUCT'\r\nexport const DELETE_PRODUCT = 'DELETE_PRODUCT'\r\nexport const GET_PRODUCT_BASE_ON_ID_TO_EDIT = 'GET_PRODUCT_BASE_ON_ID_TO_EDIT'","import React, { Component } from 'react';\r\nimport Products from '../../components/Products/Products';\r\nimport Product from '../../components/Products/Product';\r\nimport { connect } from 'react-redux';\r\nimport * as Actions from './../../actions/index';\r\n\r\n\r\nclass ProductPage extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchProducts()\r\n    }\r\n\r\n    showProducts = (products) => {\r\n        let { onDeleteProduct } = this.props;\r\n        let result;\r\n        if (products.length > 0) {\r\n            result = products.map((product, index) => {\r\n                return (\r\n                    <Product key={index} product={product} index={index} onDeleteProduct={onDeleteProduct} />\r\n                )\r\n            })\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        let { products } = this.props;\r\n        return (\r\n            <Products>\r\n                {this.showProducts(products)}\r\n            </Products>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        products: state.product\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onFetchProducts: () => {\r\n            dispatch(Actions.actFetchProductsRequest())\r\n        },\r\n        onDeleteProduct: (id) => {\r\n            dispatch(Actions.actDeleteProductsRequest(id))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductPage);","import React, { Component } from 'react';\r\nimport * as Actions from './../../actions/index';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass ProductAddPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            txtName: '',\r\n            txtPrice: '',\r\n            cbStatus: false\r\n        }\r\n    }\r\n    onChange = (e) => {\r\n        let target = e.target;\r\n        let name = target.name;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSave = (e) => {\r\n        let { history } = this.props\r\n        let product = {\r\n            name: this.state.txtName,\r\n            price: this.state.txtPrice,\r\n            status: this.state.cbStatus\r\n        }\r\n        e.preventDefault()\r\n        this.props.onAddProduct(product)\r\n        history.goBack()\r\n    }\r\n    render() {\r\n        let { txtName, txtPrice, cbStatus } = this.state;\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                        <form onSubmit={this.onSave}>\r\n                            <legend>Form Add Product</legend>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label for=\"txtName\">Name</label>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Name\" id=\"txtName\" name=\"txtName\" onChange={this.onChange} value={txtName} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"txtPrice\">Price</label>\r\n                                <input type=\"number\" className=\"form-control\" placeholder=\"Enter Price\" id=\"txtPrice\" name=\"txtPrice\" onChange={this.onChange} value={txtPrice} />\r\n                            </div>\r\n\r\n                            <div className=\"checkbox\">\r\n                                <label>\r\n                                    <input type=\"checkbox\" value={cbStatus} name=\"cbStatus\" onChange={this.onChange} />\r\n                                    Active\r\n                  </label>\r\n                            </div>\r\n                            <Link to=\"/product-list\" type=\"submit\" className=\"btn btn-warning mr-10\">Back</Link>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return {\r\n\r\n//     }\r\n// }\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onAddProduct: (product) => {\r\n            dispatch(Actions.actAddProductsRequest(product))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ProductAddPage);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport * as Actions from './../../actions/index';\r\n\r\nclass ProductEditPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            txtName: '',\r\n            txtPrice: '',\r\n            cbStatus: false\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let { match } = this.props;\r\n        let id = match.params.id;\r\n        this.props.onGetProductBaseOnIdToEdit(id)\r\n\r\n\r\n\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps.productEditing.id)\r\n        this.setState({\r\n            txtName: nextProps.productEditing.name,\r\n            txtPrice: nextProps.productEditing.price,\r\n            cbStatus: nextProps.productEditing.status\r\n        })\r\n    }\r\n    onChange = (e) => {\r\n        let target = e.target;\r\n        let name = target.name;\r\n        let value = target.type === 'checkbox' ? target.checked : target.value;\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    onSave = (e) => {\r\n        e.preventDefault()\r\n        let { match, history } = this.props;\r\n        let id = match.params.id;\r\n        let { txtName, txtPrice, cbStatus } = this.state;\r\n        let product = {                        \r\n            name: txtName,\r\n            price: txtPrice,\r\n            status: cbStatus\r\n        }           \r\n        this.props.onUpdateProduct(id, product)       \r\n        history.goBack() \r\n    }\r\n    render() {\r\n        let { txtName, txtPrice, cbStatus } = this.state;\r\n        return (\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n\r\n                    <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n                        <form onSubmit={this.onSave}>\r\n                            <legend>Form Edit Product</legend>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label for=\"txtName\">Name</label>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Enter Name\" id=\"txtName\" name=\"txtName\" onChange={this.onChange} value={txtName} />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label for=\"txtPrice\">Price</label>\r\n                                <input type=\"number\" className=\"form-control\" placeholder=\"Enter Price\" id=\"txtPrice\" name=\"txtPrice\" onChange={this.onChange} value={txtPrice} />\r\n                            </div>\r\n\r\n                            <div className=\"checkbox\">\r\n                                <label>\r\n                                    <input type=\"checkbox\" value={cbStatus} name=\"cbStatus\" onChange={this.onChange} checked={cbStatus} />\r\n                                    Active\r\n                  </label>\r\n                            </div>\r\n                            <Link to=\"/product-list\" type=\"submit\" className=\"btn btn-warning mr-10\">Back</Link>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                        </form>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        productEditing: state.product        \r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, props) => {\r\n    return {\r\n        onGetProductBaseOnIdToEdit: (id) => {\r\n            dispatch(Actions.actGetProductBaseOnIdToEditRequest(id))\r\n        },\r\n        onUpdateProduct: (id, product) => {\r\n            dispatch(Actions.actUpdateProductRequest(id, product))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductEditPage);","import React from 'react';\r\nimport HomePage from \"./pages/HomePage/HomePage\";\r\nimport ProductPage from './pages/ProductPage/ProductPage';\r\nimport ProductAddPage from './pages/ProductActionPage/ProductAddPage';\r\nimport ProductEditPage from './pages/ProductActionPage/ProductEditPage';\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path : '/',\r\n        exact: true,\r\n        main : () => <HomePage />\r\n    },\r\n    {\r\n        path : '/product-list',\r\n        exact: false,\r\n        main : () => <ProductPage />\r\n    },\r\n    {\r\n        path : '/product/add',\r\n        exact: false,\r\n        main : ({history}) => <ProductAddPage history={history} />\r\n    },\r\n    {\r\n        path : '/product/edit/:id',\r\n        exact: false,\r\n        main : ({match, history}) => <ProductEditPage match={match} history={history} />\r\n    }   \r\n\r\n]\r\n\r\nexport default routes;","import React, { Component } from 'react';\nimport './App.css';\nimport Menu from './components/Menu/Menu';\nimport routes from './routes';\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\n\nclass App extends Component {\n\n  showContents = (routes) => {\n    let result = null;\n    if (routes.length > 0) {\n      result = routes.map((route, index) => {\n        return <Route key={index} path={route.path} component={route.main} exact={route.exact} />\n      })\n    }\n    return result;\n  }\n  render() {\n    return (\n      <Router>\n        <Menu />\n        <div className=\"container\">\n\n          {this.showContents(routes)}\n\n        </div>\n\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as Types from './../constants/ActionTypes';\r\n\r\nvar initialState = [];\r\n\r\n\r\n// var s4 = () => {\r\n//     return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\r\n// }\r\n\r\n// var randomID = () => {\r\n//     return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\r\n// }\r\n\r\nvar findIndex = (products, id) => {\r\n    var result = -1;\r\n    products.forEach((product, index) => {\r\n        if (product.id === id) {\r\n            result = index;\r\n        }\r\n    });\r\n    return result;\r\n}\r\n\r\nconst myReducer = (state = initialState, action) => {\r\n    let index = -1;\r\n    switch (action.type) {\r\n        case Types.FETCH_PRODUCTS:\r\n            state = action.products\r\n            return [...state]\r\n        case Types.ADD_PRODUCT:\r\n            state.push(action.product)\r\n            return [...state]\r\n        case Types.DELETE_PRODUCT:\r\n            index = findIndex(state, action.id)\r\n            state.splice(index, 1)\r\n            return [...state]\r\n        case Types.GET_PRODUCT_BASE_ON_ID_TO_EDIT:\r\n            state = action.product\r\n            return state\r\n        case Types.UPDATE_PRODUCT:\r\n            index = findIndex(state, action.product.id)\r\n            state[index] = action.product\r\n            return [...state]\r\n        default:\r\n            return [...state];\r\n    }\r\n}\r\n\r\nexport default myReducer;","import {combineReducers} from 'redux';\r\nimport product from './product';\r\n\r\nconst myReducer = combineReducers({\r\n    product    \r\n})\r\n\r\nexport default myReducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport myReducer from './reducers/index';\nimport thunk from 'redux-thunk'\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    myReducer,\n    composeEnhancer(applyMiddleware(thunk)),\n)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}